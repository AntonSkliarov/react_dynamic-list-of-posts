{"version":3,"sources":["components/Loader/Loader.jsx","api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/Comment/Comment.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["Loader","className","BASE_URL","getUserPosts","userId","a","fetch","response","json","userPosts","Number","data","filteredPosts","filter","post","getPostDetails","postId","result","PostsList","seletedUser","setPostId","selectedPostId","useState","posts","setPosts","loader","setLoader","useEffect","requestedPosts","fetchData","map","key","id","body","type","onClick","current","getPostComments","postComments","filteredComments","comment","commentId","method","newComment","headers","JSON","stringify","NewCommentForm","setOpenComments","openPostId","commentName","setCommentName","commentEmail","setCommentEmail","commentBody","setCommentBody","onSubmit","event","preventDefault","prevComments","name","email","addCommentToServer","uuidv4","placeholder","value","onChange","target","defaultProps","Comment","removeComment","PostDetails","openPost","setOpenPost","openComments","hiddenComments","setHiddenComments","requestedPost","requestedComment","commentIdForRemove","deleteCommentFromServer","length","currentHiddenComments","App","setSeletedUser","ReactDOM","render","document","getElementById"],"mappings":"iYAGaA,G,YAAS,kBACpB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,uBCLNC,EAAW,iCCEjB,SAAeC,EAAtB,kC,4CAAO,WAA4BC,GAA5B,mBAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,YADvB,cACCK,EADD,gBAEmBA,EAASC,OAF5B,UAECC,EAFD,OAIkB,IAAnBC,OAAON,GAJN,yCAKIK,EAAUE,MALd,cAQCC,EAAgBH,EAAUE,KAAKE,QAAO,SAAAC,GAAI,OAC9CA,EAAKV,SAAWM,OAAON,MATpB,kBAWEQ,GAXF,6C,sBAcA,SAAeG,EAAtB,kC,4CAAO,WAA8BC,GAA9B,iBAAAX,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,kBAAsBc,IAD7C,cACCT,EADD,gBAEgBA,EAASC,OAFzB,cAECS,EAFD,yBAIEA,EAAON,MAJT,4C,sBCVA,SAASO,EAAT,GAAgE,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,eAAkB,EAC1CC,mBAAS,IADiC,mBAC7DC,EAD6D,KACtDC,EADsD,OAExCF,oBAAS,GAF+B,mBAE7DG,EAF6D,KAErDC,EAFqD,KAIpEC,qBAAU,WAAM,4CACd,4BAAAtB,EAAA,sEAC+BF,EAAagB,GAD5C,OACQS,EADR,OAGEJ,EAASI,GAHX,4CADc,uBAAC,WAAD,wBAOdC,GACAH,GAAU,KACT,CAACP,IAUJ,OACE,yBAAKlB,UAAU,aACb,sCACCwB,EACG,kBAAC,EAAD,MAEA,wBAAIxB,UAAU,mBACXsB,EAAMO,KAAI,SAAAhB,GAAI,OACb,wBACEb,UAAU,kBACV8B,IAAKjB,EAAKkB,IAEV,6BACE,4CAAclB,EAAKV,OAAnB,QACCU,EAAKmB,MAER,4BACEC,KAAK,SACLjC,UAAU,2BACVkC,QAAS,kBA3BHnB,EA2BsBF,EAAKkB,QA1B/CZ,GAAU,SAAAgB,GAAO,OACfA,IAAYpB,EACR,GACAA,KAJa,IAACA,IA6BLK,IAAmBP,EAAKkB,GAAxB,sBChDZ,SAAeK,EAAtB,kC,4CAAO,WAA+BrB,GAA/B,mBAAAX,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,cADvB,cACCK,EADD,gBAEsBA,EAASC,OAF/B,cAEC8B,EAFD,OAICC,EAAmBD,EAAa3B,KAAKE,QAAO,SAAA2B,GAAO,OACvDA,EAAQxB,SAAWA,KALhB,kBAOEuB,GAPF,4C,kEAUA,WAAuCE,GAAvC,iBAAApC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,qBAAyBuC,GACnD,CAAEC,OAAQ,WAFP,cACCnC,EADD,gBAGgBA,EAASC,OAHzB,cAGCS,EAHD,yBAKEA,EAAON,MALT,4C,kEAQA,WAAkCgC,GAAlC,SAAAtC,EAAA,+EACEC,MAAM,GAAD,OAAIJ,EAAJ,cAA0B,CACpCwC,OAAQ,OACRE,QAAS,CACP,eAAgB,mCAElBX,KAAMY,KAAKC,UAAUH,MANlB,4C,wDCdA,SAASI,EAAT,GAA0D,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,WAAc,EACxB3B,mBAAS,IADe,mBACvD4B,EADuD,KAC1CC,EAD0C,OAEtB7B,mBAAS,IAFa,mBAEvD8B,EAFuD,KAEzCC,EAFyC,OAGxB/B,mBAAS,IAHe,mBAGvDgC,EAHuD,KAG1CC,EAH0C,KA2B9D,OACE,0BAAMtD,UAAU,iBAAiBuD,SAvBhB,SAACC,GAClBA,EAAMC,iBAENV,GAAgB,SAACW,GACf,IAAMhB,EAAa,CACjBiB,KAAMV,EACNW,MAAOT,EACPnB,KAAMqB,EACNtC,OAAQiC,GAQV,OALAE,EAAe,IACfE,EAAgB,IAChBE,EAAe,IDJd,SAAP,2BCKMO,CAAmBnB,GAEb,GAAN,mBAAWgB,GAAX,4BACKhB,GADL,IACiBX,GAAI+B,uBAOrB,yBAAK9D,UAAU,cACb,2BACEiC,KAAK,OACL0B,KAAK,OACLI,YAAY,YACZ/D,UAAU,wBACVgE,MAAOf,EACPgB,SAAU,SAAAT,GAAK,OAAIN,EAAeM,EAAMU,OAAOF,WAInD,yBAAKhE,UAAU,cACb,2BACEiC,KAAK,OACL0B,KAAK,QACLI,YAAY,aACZ/D,UAAU,wBACVgE,MAAOb,EACPc,SAAU,SAAAT,GAAK,OAAIJ,EAAgBI,EAAMU,OAAOF,WAIpD,yBAAKhE,UAAU,cACb,8BACE2D,KAAK,OACLI,YAAY,oBACZ/D,UAAU,wBACVgE,MAAOX,EACPY,SAAU,SAAAT,GAAK,OAAIF,EAAeE,EAAMU,OAAOF,WAInD,4BACE/B,KAAK,SACLjC,UAAU,wCAFZ,kBAeN8C,EAAeqB,aAAe,CAC5BnB,WAAY,G,MChFP,SAASoB,EAAT,GAA6D,IAA1C5B,EAAyC,EAAzCA,UAAWa,EAA8B,EAA9BA,YAAagB,EAAiB,EAAjBA,cAChD,OACE,wBAAIrE,UAAU,yBAAyB8B,IAAKU,GAC1C,4BACEP,KAAK,SACLjC,UAAU,oCACVkC,QAAS,kBAAMmC,EAAc7B,KAH/B,KAOA,2BAAIa,ICJH,SAASiB,EAAT,GAA0C,IAAnBlD,EAAkB,EAAlBA,eAAkB,EACdC,mBAAS,IADK,mBACvCkD,EADuC,KAC7BC,EAD6B,OAENnD,mBAAS,IAFH,mBAEvCoD,EAFuC,KAEzB1B,EAFyB,OAGF1B,oBAAS,GAHP,mBAGvCqD,EAHuC,KAGvBC,EAHuB,OAIlBtD,oBAAS,GAJS,mBAIvCG,EAJuC,KAI/BC,EAJ+B,KAM9CC,qBAAU,WAAM,4CACd,4BAAAtB,EAAA,sEAC8BU,EAAeM,GAD7C,OACQwD,EADR,OAGEJ,EAAYI,GAHd,4CADc,uBAAC,WAAD,wBAOdhD,KACC,CAACR,IAEJM,qBAAU,WAAM,4CACd,4BAAAtB,EAAA,sEACiCgC,EAAgBmC,EAASxC,IAD1D,OACQ8C,EADR,OAGE9B,EAAgB8B,GAHlB,4CADc,uBAAC,WAAD,wBAOdjD,GACAH,GAAU,KACT,CAAC8C,EAASxC,KAEb,IAIMsC,EAAgB,SAACS,GACrB,IAAMxC,EAAmBmC,EAAa7D,QAAO,SAAA2B,GAAO,OAClDA,EAAQR,KAAO+C,KAGjB/B,EAAgBT,GHjCb,SAAP,2BGkCIyC,CAAwBD,IAG1B,OACE,oCACGtD,EACG,kBAAC,EAAD,MAEA,yBAAKxB,UAAU,gCACb,6CAEA,6BAASA,UAAU,qBACjB,2BAAIuE,EAASvC,OAGf,6BAAShC,UAAU,yBACQ,IAAxByE,EAAaO,OACV,uBAAGhF,UAAU,kCAAb,eAEA,oCACE,4BACEiC,KAAK,SACLjC,UAAU,yCACVkC,QAjCO,WACzByC,GAAkB,SAAAM,GAAqB,OAAKA,OAkCzBP,EAAc,eACHD,EAAaO,OADV,8BAEHP,EAAaO,OAFV,iBAMfN,GACA,wBAAI1E,UAAU,qBACXyE,EAAa5C,KAAI,SAAAU,GAAO,OACvB,kBAAC6B,EAAD,CACE5B,UAAWD,EAAQR,GACnBsB,YAAad,EAAQP,KACrBqC,cAAeA,UAS/B,iCACE,yBAAKrE,UAAU,6BACb,kBAAC,EAAD,CACE+C,gBAAiBA,EACjBC,WAAYuB,EAASxC,SCxCxBmD,MAlDf,WAAgB,IAAD,EACyB7D,mBAAS,GADlC,mBACNH,EADM,KACOiE,EADP,OAEuB9D,mBAAS,IAFhC,mBAEND,EAFM,KAEUD,EAFV,KAIb,OACE,yBAAKnB,UAAU,OACb,4BAAQA,UAAU,eAChB,qDAGE,4BACEA,UAAU,qBACViE,SAAU,SAAAT,GAAK,OAAI2B,EAAe3B,EAAMU,OAAOF,SAE/C,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,gBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,oBACA,4BAAQA,MAAM,KAAd,wBACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,KAAd,4BACA,4BAAQA,MAAM,KAAd,mBACA,4BAAQA,MAAM,MAAd,oBAKN,0BAAMhE,UAAU,aACd,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEkB,YAAaT,OAAOS,GACpBC,UAAWA,EACXC,eAAgBX,OAAOW,MAI1BA,GAEC,yBAAKpB,UAAU,gBACb,kBAAC,EAAD,CAAaoB,eAAgBX,OAAOW,SC1ChDgE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.6a59c18e.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport async function getUserPosts(userId) {\n  const response = await fetch(`${BASE_URL}/posts/`);\n  const userPosts = await response.json();\n\n  if (Number(userId) === 0) {\n    return userPosts.data;\n  }\n\n  const filteredPosts = userPosts.data.filter(post => (\n    post.userId === Number(userId)));\n\n  return filteredPosts;\n}\n\nexport async function getPostDetails(postId) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const result = await response.json();\n\n  return result.data;\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { Loader } from '../Loader/Loader';\nimport { getUserPosts } from '../../api/posts';\n\nexport function PostsList({ seletedUser, setPostId, selectedPostId }) {\n  const [posts, setPosts] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestedPosts = await getUserPosts(seletedUser);\n\n      setPosts(requestedPosts);\n    }\n\n    fetchData();\n    setLoader(false);\n  }, [seletedUser]);\n\n  const buttonStatus = (postId) => {\n    setPostId(current => (\n      current === postId\n        ? ''\n        : postId\n    ));\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {loader\n        ? <Loader />\n        : (\n          <ul className=\"PostsList__list\">\n            {posts.map(post => (\n              <li\n                className=\"PostsList__item\"\n                key={post.id}\n              >\n                <div>\n                  <b>{`[User #${post.userId}]: `}</b>\n                  {post.body}\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => buttonStatus(post.id)}\n                >\n                  {selectedPostId === post.id ? `Close` : `Open`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n    </div>\n  );\n}\n\nPostsList.propTypes = {\n  seletedUser: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport async function getPostComments(postId) {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const postComments = await response.json();\n\n  const filteredComments = postComments.data.filter(comment => (\n    comment.postId === postId));\n\n  return filteredComments;\n}\n\nexport async function deleteCommentFromServer(commentId) {\n  const response = await fetch(`${BASE_URL}/comments/${commentId}`,\n    { method: 'DELETE' });\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport async function addCommentToServer(newComment) {\n  return fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addCommentToServer } from '../../api/comments';\n\nexport function NewCommentForm({ setOpenComments, openPostId }) {\n  const [commentName, setCommentName] = useState('');\n  const [commentEmail, setCommentEmail] = useState('');\n  const [commentBody, setCommentBody] = useState('');\n\n  const addComment = (event) => {\n    event.preventDefault();\n\n    setOpenComments((prevComments) => {\n      const newComment = {\n        name: commentName,\n        email: commentEmail,\n        body: commentBody,\n        postId: openPostId,\n      };\n\n      setCommentName('');\n      setCommentEmail('');\n      setCommentBody('');\n      addCommentToServer(newComment);\n\n      return [...prevComments, {\n        ...newComment, id: uuidv4(),\n      }];\n    });\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={addComment}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={commentName}\n          onChange={event => setCommentName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={commentEmail}\n          onChange={event => setCommentEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentBody}\n          onChange={event => setCommentBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n}\n\nNewCommentForm.propTypes = {\n  setOpenComments: PropTypes.func.isRequired,\n  openPostId: PropTypes.number,\n};\n\nNewCommentForm.defaultProps = {\n  openPostId: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Comment({ commentId, commentBody, removeComment }) {\n  return (\n    <li className=\"PostDetails__list-item\" key={commentId}>\n      <button\n        type=\"button\"\n        className=\"PostDetails__remove-button button\"\n        onClick={() => removeComment(commentId)}\n      >\n        X\n      </button>\n      <p>{commentBody}</p>\n    </li>\n  );\n}\n\nComment.propTypes = {\n  commentId: PropTypes.number.isRequired,\n  commentBody: PropTypes.number.isRequired,\n  removeComment: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPostComments, deleteCommentFromServer } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { Loader } from '../Loader/Loader';\nimport { Comment } from '../Comment';\n\nexport function PostDetails({ selectedPostId }) {\n  const [openPost, setOpenPost] = useState({});\n  const [openComments, setOpenComments] = useState([]);\n  const [hiddenComments, setHiddenComments] = useState(true);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestedPost = await getPostDetails(selectedPostId);\n\n      setOpenPost(requestedPost);\n    }\n\n    fetchData();\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestedComment = await getPostComments(openPost.id);\n\n      setOpenComments(requestedComment);\n    }\n\n    fetchData();\n    setLoader(false);\n  }, [openPost.id]);\n\n  const commentsVisibility = () => {\n    setHiddenComments(currentHiddenComments => !currentHiddenComments);\n  };\n\n  const removeComment = (commentIdForRemove) => {\n    const filteredComments = openComments.filter(comment => (\n      comment.id !== commentIdForRemove\n    ));\n\n    setOpenComments(filteredComments);\n    deleteCommentFromServer(commentIdForRemove);\n  };\n\n  return (\n    <>\n      {loader\n        ? <Loader />\n        : (\n          <div className=\"PostDetails App__PostDetails\">\n            <h2>Post details:</h2>\n\n            <section className=\"PostDetails__post\">\n              <p>{openPost.body}</p>\n            </section>\n\n            <section className=\"PostDetails__comments\">\n              {openComments.length === 0\n                ? <p className=\"PostDetails__noCommentsMessage\">No comments</p>\n                : (\n                  <>\n                    <button\n                      type=\"button\"\n                      className=\"button PostDetails__showCommentsButton\"\n                      onClick={commentsVisibility}\n                    >\n                      {hiddenComments\n                        ? `Show ${openComments.length} comment(s)`\n                        : `Hide ${openComments.length} comment(s)`\n                      }\n                    </button>\n\n                    {!hiddenComments && (\n                      <ul className=\"PostDetails__list\">\n                        {openComments.map(comment => (\n                          <Comment\n                            commentId={comment.id}\n                            commentBody={comment.body}\n                            removeComment={removeComment}\n                          />\n                        ))}\n                      </ul>\n                    )}\n                  </>\n                )}\n            </section>\n\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm\n                  setOpenComments={setOpenComments}\n                  openPostId={openPost.id}\n                />\n              </div>\n            </section>\n          </div>\n        )}\n    </>\n  );\n}\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nfunction App() {\n  const [seletedUser, setSeletedUser] = useState(0);\n  const [selectedPostId, setPostId] = useState('');\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setSeletedUser(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            seletedUser={Number(seletedUser)}\n            setPostId={setPostId}\n            selectedPostId={Number(selectedPostId)}\n          />\n        </div>\n\n        {selectedPostId\n        && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={Number(selectedPostId)} />\n          </div>\n        )}\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}